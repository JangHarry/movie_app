{"version":3,"sources":["components/Movie.js","App.js","index.js"],"names":["MoviePoster","poster","alt","src","title","className","MovieGenre","genre","Movie","genres","synopsis","map","index","key","text","maxLine","ellipsis","trimRight","basedOn","App","state","_renderMovies","movies","movie","id","medium_cover_image","_getMovies","a","_callApi","console","log","setState","fetch","then","response","json","data","catch","err","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"ySA8BA,SAASA,EAAT,GAAoC,IAAdC,EAAa,EAAbA,OAAQC,EAAK,EAALA,IAC1B,OACI,yBAAKC,IAAKF,EAAQC,IAAKA,EAAKE,MAAOF,EAAKG,UAAU,kBAI1D,SAASC,EAAT,GAA6B,IAARC,EAAO,EAAPA,MACjB,OACI,0BAAMF,UAAU,gBAAgBE,GAoBzBC,MArDf,YAAkD,IAAlCJ,EAAiC,EAAjCA,MAAOH,EAA0B,EAA1BA,OAAQQ,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,SACnC,OACI,yBAAKL,UAAU,SACX,yBAAKA,UAAU,iBACX,kBAACL,EAAD,CAAaC,OAAQA,EAAQC,IAAKE,KAEtC,yBAAKC,UAAU,iBACX,4BAAKD,GACL,yBAAKC,UAAU,iBACVI,EAAOE,KAAI,SAACJ,EAAOK,GAAR,OAAkB,kBAACN,EAAD,CAAYC,MAAOA,EAAOM,IAAKD,QAEjE,yBAAKP,UAAU,mBACf,kBAAC,IAAD,CACIS,KAAMJ,EACNK,QAAQ,IACRC,SAAS,MACTC,WAAS,EACTC,QAAQ,gBC+BbC,G,kNA9CbC,MAAO,G,EAOPC,cAAgB,WASd,OARe,EAAKD,MAAME,OAAOX,KAAI,SAAAY,GACnC,OAAO,kBAAC,EAAD,CACPV,IAAKU,EAAMC,GACXpB,MAAOmB,EAAMnB,MACbH,OAAQsB,EAAME,mBACdhB,OAAQc,EAAMd,OACdC,SAAUa,EAAMb,e,EAKpBgB,W,sBAAa,4BAAAC,EAAA,sEACU,EAAKC,WADf,OACLN,EADK,OAEXO,QAAQC,IAAK,EAAKF,YAClB,EAAKG,SAAS,CACZT,WAEFO,QAAQC,IAAI,EAAKV,MAAME,QANZ,2C,EASbM,SAAW,WACT,OAAOI,MAAM,yDACbC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAE,GAAI,OAAIA,EAAKC,KAAKd,UACvBe,OAAM,SAAAC,GAAG,OAAIT,QAAQC,IAAIQ,O,kEA7BzBC,KAAKb,e,+BAiCE,IACAJ,EAAUiB,KAAKnB,MAAfE,OACP,OACE,yBAAKjB,UAAWiB,EAAS,MAAQ,gBAC9BA,EAASiB,KAAKlB,gBAAiB,kB,GA1CtBmB,cCClBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.6c719c7e.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport LinesEllipsis from 'react-lines-ellipsis'\r\nimport './Movie.css';\r\n\r\nfunction Movie({title, poster, genres, synopsis}){\r\n    return (\r\n        <div className=\"Movie\">\r\n            <div className=\"Movie__Column\">\r\n                <MoviePoster poster={poster} alt={title} />\r\n            </div>   \r\n            <div className=\"Movie__Column\">\r\n                <h1>{title}</h1>\r\n                <div className=\"Movie__Genres\">\r\n                    {genres.map((genre, index) => <MovieGenre genre={genre} key={index} />)}\r\n                </div>\r\n                <div className=\"Movie__Synopsis\">\r\n                <LinesEllipsis\r\n                    text={synopsis}\r\n                    maxLine='3'\r\n                    ellipsis='...'\r\n                    trimRight\r\n                    basedOn='letters'\r\n                    />   \r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction MoviePoster({poster, alt}){\r\n    return (\r\n        <img src={poster} alt={alt} title={alt} className=\"Movie__Poster\" />\r\n    )\r\n}\r\n\r\nfunction MovieGenre({genre}){\r\n    return (\r\n        <span className=\"Movie__Genre\">{genre}</span>\r\n    )\r\n}\r\n\r\nMovie.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    poster: PropTypes.string.isRequired,\r\n    genres: PropTypes.array.isRequired,\r\n    synopsis: PropTypes.string.isRequired\r\n}\r\n\r\nMoviePoster.propTypes = {\r\n    poster: PropTypes.string.isRequired,\r\n    alt: PropTypes.string.isRequired\r\n}\r\n\r\nMovieGenre.propTypes ={\r\n    genre: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Movie","import React, { Component } from 'react';\nimport Movie from './components/Movie';\nimport \"./components/App.css\";\n\n\nclass App extends Component {\n\n  state ={}\n\n  componentDidMount(){\n    this._getMovies();    \n   \n  }\n\n  _renderMovies = () => {\n    const movies = this.state.movies.map(movie =>{\n      return <Movie \n      key={movie.id} \n      title={movie.title}\n      poster={movie.medium_cover_image}\n      genres={movie.genres}\n      synopsis={movie.synopsis}/>\n    })\n    return movies\n  }\n\n  _getMovies = async () => {    \n    const movies = await this._callApi()\n    console.log( this._callApi());\n    this.setState({\n      movies\n    })\n    console.log(this.state.movies);\n  }\n\n  _callApi = () => {   \n    return fetch('https://yts.mx/api/v2/list_movies.json?sort_by=rating')   \n   .then(response => response.json())\n   .then(json => json.data.movies)\n   .catch(err => console.log(err))     \n  }\n\n\n  render(){\n    const {movies} = this.state;    \n    return(\n      <div className={movies ? \"App\" : \"App--loading\"}>\n        {movies ? this._renderMovies(): \"Loading...\"}\n      </div> \n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}